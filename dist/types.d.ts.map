{"mappings":"AOMA;IACI,kBAAkB,CAAC,EAAE,MAAM,CAAA;IAC3B,6BAA6B,CAAC,EAAE,MAAM,CAAA;IACtC,oBAAoB,CAAC,EAAE,MAAM,CAAA;IAC7B,oBAAoB,CAAC,EAAE,MAAM,CAAA;IAC7B,iBAAiB,CAAC,EAAE,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,CAAA;CAC7C;AAED,kCAAkC,MAAM,EAAE,gBAAgB;;;EAmBzD","sources":["src/src/helpers.context.ts","src/src/inner/extend-config.helper.ts","src/src/inner/escape.helper.ts","src/src/inner/tag.decorator.ts","src/src/inner/index.ts","src/src/outer/url-matcher.helper.ts","src/src/outer/parse-custom-query.helper.ts","src/src/index.ts","src/index.ts"],"sourcesContent":[null,null,null,null,null,null,null,null,"import { HelperContext, defaultHelperContext } from './helpers.context';\r\nimport { tagDecorator, extendConfig, escape } from './inner';\r\n\r\nimport { urlMatcherHelper } from './outer/url-matcher.helper';\r\nimport { parseCustomQuery } from './outer/parse-custom-query.helper';\r\n\r\nexport interface E2EHelpersConfig {\r\n    customSelectorAttr?: string\r\n    customSelectorParamAttrPrefix?: string\r\n    customSelectorPrefix?: string\r\n    pseudoSelectorPrefix?: string\r\n    pseudoSelectorMap?: Record<string, string>\r\n}\r\n\r\nexport function e2eHelpersFactory(config: E2EHelpersConfig) {\r\n    const mergedCtx: HelperContext = extendConfig(defaultHelperContext, {\r\n        customSelectorAttr: config.customSelectorAttr,\r\n        customSelectorParamAttrPrefix: config.customSelectorParamAttrPrefix,\r\n        customSelectorPrefix: config.customSelectorPrefix,\r\n        pseudoSelectorPrefix: config.pseudoSelectorPrefix,\r\n        pseudoSelectorMap: config.pseudoSelectorMap\r\n    });\r\n\r\n    const ctx: HelperContext = {\r\n        ...mergedCtx,\r\n        _customSelectorPrefixEscaped: escape(mergedCtx.customSelectorPrefix),\r\n        _pseudoSelectorPrefixEscaped: escape(mergedCtx.pseudoSelectorPrefix)\r\n    }\r\n\r\n    return {\r\n        r: tagDecorator(urlMatcherHelper, ctx),\r\n        q: tagDecorator(parseCustomQuery, ctx),\r\n    }\r\n}\r\n"],"names":[],"version":3,"file":"types.d.ts.map"}